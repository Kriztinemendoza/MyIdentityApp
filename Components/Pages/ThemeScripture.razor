@page "/themes/{ThemeName}"
@using MyIdentityApp.Models
@using MyIdentityApp.Services
@inject ScriptureService ScriptureService
@inject NavigationManager NavigationManager

<div class="theme-container">
    <div class="theme-header">
        <button class="back-button" @onclick="NavigateBack">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h1>@ThemeName</h1>
    </div>

    @if (themeScriptures != null && themeScriptures.Any())
    {
        <div class="scripture-list">
            @foreach (var scripture in themeScriptures)
            {
                <div class="scripture-card">
                    <div class="affirmation">
                        @scripture.Affirmation
                    </div>

                    <div class="scripture-text">
                        "@scripture.Text"
                    </div>

                    <div class="reference">
                        - @scripture.Reference
                    </div>

                    <div class="actions">
                        <button class="btn @(scripture.IsFavorite ? "btn-favorite-active" : "btn-favorite")"
                                @onclick="() => ToggleFavorite(scripture.Id)">
                            <i class="fas fa-heart"></i>
                        </button>

                        <button class="btn btn-share" @onclick="() => ShareScripture(scripture)">
                            <i class="fas fa-share-alt"></i>
                        </button>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <p>No scriptures found for this theme.</p>
        </div>
    }
</div>

@code {
    [Parameter]
    public string ThemeName { get; set; }

    private List<Scripture> themeScriptures;
    private IdentityTheme currentTheme;

    protected override async Task OnInitializedAsync()
    {
        await LoadThemeScriptures();
    }

    // protected override void OnParametersSet()
    // {
    //     LoadThemeScriptures();
    // }

    private async Task LoadThemeScriptures()
    {
        if (!string.IsNullOrEmpty(ThemeName))
        {
            themeScriptures = await ScriptureService.GetScripturesByThemeAsync(ThemeName);
            var themes = await ScriptureService.GetAllThemesAsync();
            currentTheme = themes.FirstOrDefault(t => t.Name == ThemeName);
        }
    }

    private void ToggleFavorite(int scriptureId)
    {
        ScriptureService.ToggleFavorite(scriptureId);
        // Refresh the data
        LoadThemeScriptures().Wait();
    }

    private async Task ShareScripture(Scripture scripture)
    {
#if ANDROID || IOS
    try
    {
        await Share.RequestAsync(new ShareTextRequest
        {
            Text = $"\"{scripture.Text}\" - {scripture.Reference}\n\nMy Identity in Christ",
            Title = "Share Scripture"
        });
    }
    catch (Exception ex)
    {
        // Handle exception or show message to user
        Console.WriteLine($"Sharing failed: {ex.Message}");
    }
#endif
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/");
    }
}

<style>
    .theme-container {
        padding: 20px;
        display: flex;
        flex-direction: column;
        height: 100%;
        margin-bottom: 70px;
    }

    .theme-header {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .back-button {
        background: none;
        border: none;
        font-size: 18px;
        color: #64748b;
        cursor: pointer;
        margin-right: 15px;
    }

    h1 {
        flex-grow: 1;
        text-align: center;
        color: #3a506b;
        font-size: 24px;
    }

    .scripture-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .scripture-card {
        background-color: #ffffff;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
    }

    .affirmation {
        font-size: 20px;
        font-weight: bold;
        color: #1e3a8a;
        margin-bottom: 15px;
    }

    .scripture-text {
        font-size: 16px;
        line-height: 1.6;
        color: #334155;
        margin-bottom: 12px;
        font-style: italic;
    }

    .reference {
        font-weight: bold;
        text-align: right;
        color: #64748b;
        margin-bottom: 15px;
    }

    .actions {
        display: flex;
        justify-content: space-between;
    }

    .btn {
        padding: 8px 12px;
        border-radius: 50px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-favorite {
        background-color: #f1f5f9;
        color: #64748b;
    }

    .btn-favorite-active {
        background-color: #fee2e2;
        color: #dc2626;
    }

    .btn-share {
        background-color: #f1f5f9;
        color: #64748b;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: #64748b;
    }
</style>